GETTING STARTED
===============

To start your own component, simply use the stamp-template.sh script:

$ cd mpf-autotemplate
$ ./stamp-template.sh ../mycomponent
$ cd ../mycomponent
$ ./autogen.sh
$ make

If mpf-core and other packages you depend on are not fully installed on the system, 
you must add them to pkg-config's search path:

export PKG_CONFIG_PATH:$PKG_CONFIG_PATH:.../mpf-core:.../mpf-opencv

To use the component that just built, you must add the appropriate location to 
GStreamer's search path:

$ export GST_PLUGIN_PATH=$GST_PLUGIN_PATH:..../mycomponent/.libs
$ gst-inspect | grep mycomponent
mycomponent:  mycomponent: Template component ...



ADDING LIBRARIES
================

To add particular libraries that your component may require, you have to modify the 
configure.ac file.  At this point the library must be supplied with a pkg-config 
file (.pc) in order to be used, later versions of the configure.ac file will include 
examples for bare libraries.

There's a section in place initially that brings in the mpf-core package:

dnl ---------- External library dependency ----------
PKG_CHECK_MODULES(MPF_CORE, mpf-core,
  ,  AC_MSG_ERROR(no MPF Core libraries found (mpf-core)))

dnl make _CFLAGS and _LIBS available
CFLAGS="$CFLAGS $MPF_CORE_CFLAGS"
LIBS="$LIBS $MPF_CORE_LIBS"
dnl ---------- External library dependency ----------

Simply copy that entire section for each of your external dependencies, and change 
all instances of 'mpf-core' to the name of that package.


ADDING ADDITIONAL SOURCE FILES
==============================

To add another source file to the project, simply put it in place and add it to the 
list of sources for the component in Makefile.am:

libmycomponent_la_SOURCES = mycomponent.c othersource.c

